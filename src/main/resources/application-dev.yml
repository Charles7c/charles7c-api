### 服务器配置
server:
  # HTTP 端口（默认 8080）
  port: 8000

--- ### 数据源配置
spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    ## 动态数据源配置（可配多主多从：m1、s1...、纯粹多库：mysql、oracle...、混合配置：m1、s1、oracle...）
    dynamic:
      # 是否启用 P6Spy（SQL 性能分析组件，默认 false，该插件有性能损耗，不建议生产环境使用）
      p6spy: true
      # 设置默认的数据源或者数据源组（默认 master）
      primary: master
      # 严格匹配数据源（默认 false. true 未匹配到指定数据源时抛异常；false 使用默认数据源）
      strict: false
      datasource:
        # 主库配置（可配多个，构成多主）
        master:
          url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:charles7c_api}?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&rewriteBatchedStatements=true&autoReconnect=true&maxReconnects=10&failOverReadOnly=false
          username: ${DB_USER:root}
          password: ${DB_PWD:123456}
          driverClassName: com.mysql.cj.jdbc.Driver
          type: ${spring.datasource.type}
        # 从库配置（可配多个，构成多从）
        slave_1:
          url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:charles7c_api}?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&rewriteBatchedStatements=true&autoReconnect=true&maxReconnects=10&failOverReadOnly=false
          username:
          password:
          lazy: true
          driverClassName: com.mysql.cj.jdbc.Driver
          type: ${spring.datasource.type}
      hikari:
        # 最大连接池数量
        maxPoolSize: 20
        # 最小空闲线程数量
        minIdle: 10
        # 配置获取连接等待超时的时间
        connectionTimeout: 10000
        # 校验超时时间
        validationTimeout: 5000
        # 空闲连接存活最大时间（默认 10 分钟）
        idleTimeout: 60000
        # 此属性控制池中连接的最长生命周期，值 0 表示无限生命周期（默认 30 分钟）
        maxLifetime: 900000
        # 连接测试 query（配置检测连接是否有效）
        connectionTestQuery: SELECT 1

--- ### Liquibase 配置
spring.liquibase:
  # 是否启用
  enabled: true
  # 配置文件路径
  change-log: classpath:/db/changelog/db.changelog-master.yaml

--- ### 日志配置
logging:
  file:
    path: ./logs

--- ### Swagger配置
swagger:
  # 是否启用 Swagger
  enabled: true

--- ### 跨域配置
cors:
  # 配置允许跨域的域名
  allowedOrigins:
    - http://localhost:5173
  # 配置允许跨域的请求方式
  allowedMethods: '*'
  # 配置允许跨域的请求头
  allowedHeaders: '*'
